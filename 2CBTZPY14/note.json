{
  "paragraphs": [
    {
      "text": "%md\n\n![sv-image](https://raw.githubusercontent.com/roberthryniewicz/images/master/silicon_valley_corporation.jpg)\n\n## Apache Spark in 5 Minutes \n#### Exploring Silicon Valley Show Episodes Dataset\n\n**Level**: Beginner\n**Language**: Scala\n**Requirements**: \n- [HDP 2.6](http://hortonworks.com/products/sandbox/) (or later) or [HDCloud](https://hortonworks.github.io/hdp-aws/)\n- Spark 2.x\n\n**Author**: Robert Hryniewicz\n**Follow** [@RobertH8z](https://twitter.com/RobertH8z)",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:14 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://raw.githubusercontent.com/roberthryniewicz/images/master/silicon_valley_corporation.jpg\" alt\u003d\"sv-image\" /\u003e\u003c/p\u003e\n\u003ch2\u003eApache Spark in 5 Minutes\u003c/h2\u003e\n\u003ch4\u003eExploring Silicon Valley Show Episodes Dataset\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eLevel\u003c/strong\u003e: Beginner\u003cbr/\u003e\u003cstrong\u003eLanguage\u003c/strong\u003e: Scala\u003cbr/\u003e\u003cstrong\u003eRequirements\u003c/strong\u003e:\u003cbr/\u003e- \u003ca href\u003d\"http://hortonworks.com/products/sandbox/\"\u003eHDP 2.6\u003c/a\u003e (or later) or \u003ca href\u003d\"https://hortonworks.github.io/hdp-aws/\"\u003eHDCloud\u003c/a\u003e\u003cbr/\u003e- Spark 2.x\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAuthor\u003c/strong\u003e: Robert Hryniewicz\u003cbr/\u003e\u003cstrong\u003eFollow\u003c/strong\u003e \u003ca href\u003d\"https://twitter.com/RobertH8z\"\u003e@RobertH8z\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821074_-1765493669",
      "id": "20161013-011142_1891215806",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:14 PM",
      "dateFinished": "Feb 22, 2017 3:25:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Short Intro",
      "text": "%md\n\nWelcome to a quick overview of Apache Spark with Sillicon Valley Episodes dataset. If you\u0027ve never watched the Silicon Valley show you can learn more about it [here](https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series)). \n\nIn this notebook we will download the dataset (in JSON format) from an external github repository, ingest it into a Spark Dataset and perform basic analysis, filtering, and word count.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:20 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWelcome to a quick overview of Apache Spark with Sillicon Valley Episodes dataset. If you\u0026rsquo;ve never watched the Silicon Valley show you can learn more about it [here](\u003ca href\u003d\"https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series))\"\u003ehttps://en.wikipedia.org/wiki/Silicon_Valley_(TV_series))\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eIn this notebook we will download the dataset (in JSON format) from an external github repository, ingest it into a Spark Dataset and perform basic analysis, filtering, and word count.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821076_-1767802163",
      "id": "20161013-011155_1645524279",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:20 PM",
      "dateFinished": "Feb 22, 2017 3:25:20 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "New to Scala?",
      "text": "%md\n\nThroughout this lab we will use basic Scala syntax. If you would like to learn more about Scala, here\u0027s an excellent introductory [Tutorial](http://www.dhgarrette.com/nlpclass/scala/basics.html).",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:22 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThroughout this lab we will use basic Scala syntax. If you would like to learn more about Scala, here\u0026rsquo;s an excellent introductory \u003ca href\u003d\"http://www.dhgarrette.com/nlpclass/scala/basics.html\"\u003eTutorial\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821077_-1768186912",
      "id": "20161013-173447_845128564",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:22 PM",
      "dateFinished": "Feb 22, 2017 3:25:22 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "New to Zeppelin?",
      "text": "%md\n\nIf you haven\u0027t already, checkout the [Hortonworks Apache Zeppelin](https://hortonworks.com/apache/zeppelin/) page as well as the [Getting Started with Apache Zeppelin](http://hortonworks.com/hadoop-tutorial/getting-started-apache-zeppelin/) tutorial.\n\nYou will find the official Apache Zeppelin page [here](https://zeppelin.apache.org/).",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:25 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf you haven\u0026rsquo;t already, checkout the \u003ca href\u003d\"https://hortonworks.com/apache/zeppelin/\"\u003eHortonworks Apache Zeppelin\u003c/a\u003e page as well as the \u003ca href\u003d\"http://hortonworks.com/hadoop-tutorial/getting-started-apache-zeppelin/\"\u003eGetting Started with Apache Zeppelin\u003c/a\u003e tutorial.\u003c/p\u003e\n\u003cp\u003eYou will find the official Apache Zeppelin page \u003ca href\u003d\"https://zeppelin.apache.org/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821077_-1768186912",
      "id": "20161014-155201_679736099",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:25 PM",
      "dateFinished": "Feb 22, 2017 3:25:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "New to Spark?",
      "text": "%md\n\nApache Spark is a fast, in-memory data processing engine with elegant and expressive development APIs to allow data workers to efficiently execute streaming, machine learning or SQL workloads that require fast iterative access to datasets.\n\nIf you would like to learn more about Apache Spark visit:\n- [Official Apache Spark Page](http://spark.apache.org/)\n- [Hortonworks Apache Spark Page](http://hortonworks.com/apache/spark/)\n- [Hortonworks Apache Spark Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html)",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:27 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eApache Spark is a fast, in-memory data processing engine with elegant and expressive development APIs to allow data workers to efficiently execute streaming, machine learning or SQL workloads that require fast iterative access to datasets.\u003c/p\u003e\n\u003cp\u003eIf you would like to learn more about Apache Spark visit:\u003cbr/\u003e- \u003ca href\u003d\"http://spark.apache.org/\"\u003eOfficial Apache Spark Page\u003c/a\u003e\u003cbr/\u003e- \u003ca href\u003d\"http://hortonworks.com/apache/spark/\"\u003eHortonworks Apache Spark Page\u003c/a\u003e\u003cbr/\u003e- \u003ca href\u003d\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html\"\u003eHortonworks Apache Spark Docs\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821078_-1767032665",
      "id": "20161014-121442_628671851",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:27 PM",
      "dateFinished": "Feb 22, 2017 3:25:27 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "How to run a paragraph?",
      "text": "%md\nTo run a paragraph in a Zeppelin notebook you can either click the `play` button (blue triangle) on the right-hand side or simply press `Shift + Enter`.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:29 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTo run a paragraph in a Zeppelin notebook you can either click the \u003ccode\u003eplay\u003c/code\u003e button (blue triangle) on the right-hand side or simply press \u003ccode\u003eShift + Enter\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821078_-1767032665",
      "id": "20161014-144044_1782842084",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:29 PM",
      "dateFinished": "Feb 22, 2017 3:25:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "What are Interpreters?",
      "text": "%md\n\nIn the following paragraphs we are going to execute Spark code, run shell commands to download and move files, run sql queries etc. Each paragraph will start with `%` followed by an interpreter name, e.g. `%spark2` for a Spark 2.x interpreter. Different interpreter names indicate what will be executed: code, markdown, html etc.This allows you to perform data ingestion, munging, wrangling, visualization, analysis, processing and more, all in one place!\n\nThroughtout this notebook we will use the following interpreters:\n\n- `%spark2` - Spark interpreter to run Spark 2.x code written in Scala\n- `%spark2.sql` - Spark SQL interprter (to execute SQL queries against temporary tables in Spark)\n- `%sh` - Shell interpreter to run shell commands\n- `%angular` - Angular interpreter to run Angular and HTML code\n- `%md` - Markdown for displaying formatted text, links, and images\n\nTo learn more about Zeppelin interpreters check out this [link](https://zeppelin.apache.org/docs/0.5.6-incubating/manual/interpreters.html).",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:31 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn the following paragraphs we are going to execute Spark code, run shell commands to download and move files, run sql queries etc. Each paragraph will start with \u003ccode\u003e%\u003c/code\u003e followed by an interpreter name, e.g. \u003ccode\u003e%spark2\u003c/code\u003e for a Spark 2.x interpreter. Different interpreter names indicate what will be executed: code, markdown, html etc.This allows you to perform data ingestion, munging, wrangling, visualization, analysis, processing and more, all in one place!\u003c/p\u003e\n\u003cp\u003eThroughtout this notebook we will use the following interpreters:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003e%spark2\u003c/code\u003e - Spark interpreter to run Spark 2.x code written in Scala\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e%spark2.sql\u003c/code\u003e - Spark SQL interprter (to execute SQL queries against temporary tables in Spark)\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e%sh\u003c/code\u003e - Shell interpreter to run shell commands\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e%angular\u003c/code\u003e - Angular interpreter to run Angular and HTML code\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e%md\u003c/code\u003e - Markdown for displaying formatted text, links, and images\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo learn more about Zeppelin interpreters check out this \u003ca href\u003d\"https://zeppelin.apache.org/docs/0.5.6-incubating/manual/interpreters.html\"\u003elink\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821078_-1767032665",
      "id": "20161014-145714_450762590",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:31 PM",
      "dateFinished": "Feb 22, 2017 3:25:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Some initial delay to be expected...",
      "text": "%md\n**Note**: The first time you run `spark.version` in the paragraph below, several services will initialize in the background. \nThis may take **1~2 min** so please **be patient**. Afterwards, each paragraph should run much more quickly since all the services will already be running.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:25:34 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: The first time you run \u003ccode\u003espark.version\u003c/code\u003e in the paragraph below, several services will initialize in the background.\u003cbr/\u003eThis may take \u003cstrong\u003e1~2 min\u003c/strong\u003e so please \u003cstrong\u003ebe patient\u003c/strong\u003e. Afterwards, each paragraph should run much more quickly since all the services will already be running.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821079_-1767417414",
      "id": "20161014-144409_1067974024",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:25:34 PM",
      "dateFinished": "Feb 22, 2017 3:25:34 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Verify Spark Version (should be 2.x)",
      "text": "%spark2.spark\n\nspark.version",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:32:33 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821079_-1767417414",
      "id": "20161012-235330_1461856587",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 17, 2017 5:02:44 AM",
      "dateFinished": "Feb 17, 2017 5:03:05 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Download JSON data file",
      "text": "%sh \n\n#  Remove old json file if already exists in local /tmp directory\nif [ -e /tmp/svepisodes.json ]\nthen\n    rm -f /tmp/svepisodes.json\nfi\n\nwget https://raw.githubusercontent.com/roberthryniewicz/datasets/master/svepisodes.json -O /tmp/svepisodes.json",
      "user": "admin",
      "dateUpdated": "Feb 18, 2017 9:41:46 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "sh"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821080_-1769341158",
      "id": "20161012-193914_1818868460",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 9:41:46 AM",
      "dateFinished": "Feb 18, 2017 9:41:47 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Move file from Local Storage to HDFS (if available/supported)",
      "text": "%sh\n\n# Remove existing (if any) copy of data from HDFS\nhdfs dfs -rm -f /tmp/svepisodes.json\n\n# Move downloaded JSON file from local storage to HDFS\nhdfs dfs -put /tmp/svepisodes.json /tmp\n",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:26:30 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "sh"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821080_-1769341158",
      "id": "20161012-200245_1679004004",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 2:07:14 PM",
      "dateFinished": "Feb 22, 2017 2:07:18 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load data into a Spark DataFrame",
      "text": "%spark2.spark\n\nval path \u003d \"/tmp/svepisodes.json\"\nval svEpisodes \u003d spark.read.json(path)         // Create a DataFrame from JSON data (automatically infer schema and data types)",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:32:47 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821080_-1769341158",
      "id": "20161012-200853_1560821654",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 2:07:37 PM",
      "dateFinished": "Feb 22, 2017 2:07:38 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "What are Datasets and DataFrames?",
      "text": "%md\n\n**Datasets** and **DataFrames** are distributed collections of data created from a variety of sources: JSON and XML files, tables in Hive, external databases and more. Conceptually, they are equivalent to a table in a relational database or a DataFrame in R or Python. Key difference between the  Dataset and the DataFrame is that Datasets are strongly typed.\n\nThere are complex manipulations possible on Datasets and DataFrames, however they are beyond this quick guide.\n\nTo learn more about Datasets and DataFrames checkout this  [link](http://spark.apache.org/docs/2.0.0/sql-programming-guide.html#datasets-and-dataframes).",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:26:53 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cstrong\u003eDatasets\u003c/strong\u003e and \u003cstrong\u003eDataFrames\u003c/strong\u003e are distributed collections of data created from a variety of sources: JSON and XML files, tables in Hive, external databases and more. Conceptually, they are equivalent to a table in a relational database or a DataFrame in R or Python. Key difference between the Dataset and the DataFrame is that Datasets are strongly typed.\u003c/p\u003e\n\u003cp\u003eThere are complex manipulations possible on Datasets and DataFrames, however they are beyond this quick guide.\u003c/p\u003e\n\u003cp\u003eTo learn more about Datasets and DataFrames checkout this \u003ca href\u003d\"http://spark.apache.org/docs/2.0.0/sql-programming-guide.html#datasets-and-dataframes\"\u003elink\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821081_-1769725907",
      "id": "20161014-131031_180366265",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:26:53 PM",
      "dateFinished": "Feb 22, 2017 3:26:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Print DataFrame Schema",
      "text": "%spark2.spark\n\nsvEpisodes.printSchema()",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:33:04 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821081_-1769725907",
      "id": "20161012-202011_596248668",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:03:24 AM",
      "dateFinished": "Feb 18, 2017 10:03:24 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Data Description",
      "text": "%angular\n\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\ntable {\n    font-family: arial, sans-serif;\n    border-collapse: collapse;\n    width: 70%;\n}\n\ntd, th {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 8px;\n}\n\ntr:nth-child(even) {\n    background-color: #dddddd;\n}\n\u003c/style\u003e\n\u003c/head\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n  \u003cth\u003e\u003c/th\u003e\n  \u003cth\u003eColumn Name\u003c/th\u003e\n  \u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e1\u003c/td\u003e\n  \u003ctd\u003eAirdate\u003c/td\u003e\n  \u003ctd\u003eDate when an episode was aired\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e2\u003c/td\u003e\n  \u003ctd\u003eAirstamp\u003c/td\u003e\n  \u003ctd\u003eTimestamp when an episode was aired\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e3\u003c/td\u003e\n  \u003ctd\u003eAirtime\u003c/td\u003e\n  \u003ctd\u003eLength of an actual episode airtime (no commercials)\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e4\u003c/td\u003e\n  \u003ctd\u003eId\u003c/td\u003e\n  \u003ctd\u003eUnique show id\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e5\u003c/td\u003e\n  \u003ctd\u003eName\u003c/td\u003e\n  \u003ctd\u003eName of an episode \u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e6\u003c/td\u003e\n  \u003ctd\u003eNumber\u003c/td\u003e\n  \u003ctd\u003eEpisode number\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e7\u003c/td\u003e\n  \u003ctd\u003eRuntime\u003c/td\u003e\n  \u003ctd\u003eTotal length of an episode (including commercials)\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e8\u003c/td\u003e\n  \u003ctd\u003eSeason\u003c/td\u003e\n  \u003ctd\u003eShow season\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e9\u003c/td\u003e\n  \u003ctd\u003eSummary\u003c/td\u003e\n  \u003ctd\u003eBrief summary of an episode\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e10\u003c/td\u003e\n  \u003ctd\u003eUrl\u003c/td\u003e\n  \u003ctd\u003eUrl where more information is available online about an episode\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003c/body\u003e\n\u003c/html\u003e\n",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:26:59 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\ntable {\n    font-family: arial, sans-serif;\n    border-collapse: collapse;\n    width: 70%;\n}\n\ntd, th {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 8px;\n}\n\ntr:nth-child(even) {\n    background-color: #dddddd;\n}\n\u003c/style\u003e\n\u003c/head\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n  \u003cth\u003e\u003c/th\u003e\n  \u003cth\u003eColumn Name\u003c/th\u003e\n  \u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e1\u003c/td\u003e\n  \u003ctd\u003eAirdate\u003c/td\u003e\n  \u003ctd\u003eDate when an episode was aired\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e2\u003c/td\u003e\n  \u003ctd\u003eAirstamp\u003c/td\u003e\n  \u003ctd\u003eTimestamp when an episode was aired\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e3\u003c/td\u003e\n  \u003ctd\u003eAirtime\u003c/td\u003e\n  \u003ctd\u003eLength of an actual episode airtime (no commercials)\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e4\u003c/td\u003e\n  \u003ctd\u003eId\u003c/td\u003e\n  \u003ctd\u003eUnique show id\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e5\u003c/td\u003e\n  \u003ctd\u003eName\u003c/td\u003e\n  \u003ctd\u003eName of an episode \u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e6\u003c/td\u003e\n  \u003ctd\u003eNumber\u003c/td\u003e\n  \u003ctd\u003eEpisode number\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e7\u003c/td\u003e\n  \u003ctd\u003eRuntime\u003c/td\u003e\n  \u003ctd\u003eTotal length of an episode (including commercials)\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e8\u003c/td\u003e\n  \u003ctd\u003eSeason\u003c/td\u003e\n  \u003ctd\u003eShow season\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e9\u003c/td\u003e\n  \u003ctd\u003eSummary\u003c/td\u003e\n  \u003ctd\u003eBrief summary of an episode\u003c/td\u003e\n\u003c/tr\u003e\u003ctr\u003e\n  \u003ctd\u003e10\u003c/td\u003e\n  \u003ctd\u003eUrl\u003c/td\u003e\n  \u003ctd\u003eUrl where more information is available online about an episode\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003c/body\u003e\n\u003c/html\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821081_-1769725907",
      "id": "20161014-140056_345247395",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:26:59 PM",
      "dateFinished": "Feb 22, 2017 3:26:59 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show DataFrame Contents",
      "text": "%spark2.spark\n\nsvEpisodes.show()",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:33:41 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821082_-1768571661",
      "id": "20161012-234401_1548074862",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:18:42 AM",
      "dateFinished": "Feb 18, 2017 10:18:44 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Is there a more interactive way to display query results?",
      "text": "%md\n\nShort answer, yes! The data displayed in the paragraph above isn\u0027t too interactive. To have a more dynamic experience, let\u0027s create a temporary (in-memory) view that we can query against and interact with the resulting data in a table or graph format. The temporary view will allow us to run SQL queries to get back results.\n\nNote that the temporary view will reside in memory as long as the Spark session is alive.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:03 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eShort answer, yes! The data displayed in the paragraph above isn\u0026rsquo;t too interactive. To have a more dynamic experience, let\u0026rsquo;s create a temporary (in-memory) view that we can query against and interact with the resulting data in a table or graph format. The temporary view will allow us to run SQL queries to get back results.\u003c/p\u003e\n\u003cp\u003eNote that the temporary view will reside in memory as long as the Spark session is alive.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821082_-1768571661",
      "id": "20161013-005846_439497469",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:03 PM",
      "dateFinished": "Feb 22, 2017 3:27:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a Temporary View",
      "text": "%spark2.spark\n\n// Creates a temporary view\nsvEpisodes.createOrReplaceTempView(\"svepisodes\")",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:33:41 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821083_-1768956409",
      "id": "20161012-202125_3295223",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:22:30 AM",
      "dateFinished": "Feb 18, 2017 10:22:31 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "So now what?",
      "text": "%md\n\nAt this point we can run queries using a familiar SQL syntax against our newly registered `svepisodes` table. \n\nNote that although we are using a SQL syntax in the following paragraph it is translated and executed using the Spark engine with all the expected optimizations.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:08 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAt this point we can run queries using a familiar SQL syntax against our newly registered \u003ccode\u003esvepisodes\u003c/code\u003e table. \u003c/p\u003e\n\u003cp\u003eNote that although we are using a SQL syntax in the following paragraph it is translated and executed using the Spark engine with all the expected optimizations.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821083_-1768956409",
      "id": "20161013-182547_1601163342",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:08 PM",
      "dateFinished": "Feb 22, 2017 3:27:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "View Data in an Interactive Table Format",
      "text": "%spark2.sql\n\nSELECT * FROM svepisodes ORDER BY season, number",
      "user": "admin",
      "dateUpdated": "Feb 18, 2017 10:22:33 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [
                {
                  "name": "airdate",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "airstamp",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "scatter": {
                "xAxis": {
                  "name": "airdate",
                  "index": 0.0,
                  "aggr": "sum"
                },
                "yAxis": {
                  "name": "airstamp",
                  "index": 1.0,
                  "aggr": "sum"
                }
              }
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "sql"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821083_-1768956409",
      "id": "20161013-005646_1818766386",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:22:33 AM",
      "dateFinished": "Feb 18, 2017 10:22:33 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Can we do something useful?",
      "text": "%md\n\nOK, so now let\u0027s run a slightly more complex SQL query on the underlying table data.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:13 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eOK, so now let\u0026rsquo;s run a slightly more complex SQL query on the underlying table data.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821084_-1770880154",
      "id": "20161013-182951_885833546",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:13 PM",
      "dateFinished": "Feb 22, 2017 3:27:13 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Total Number of Episodes",
      "text": "%spark2.sql\n\nSELECT count(1) AS TotalNumEpisodes FROM svepisodes",
      "user": "admin",
      "dateUpdated": "Feb 18, 2017 10:22:46 AM",
      "config": {
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [
                {
                  "name": "TotalNumEpisodes",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "values": [],
              "groups": [],
              "scatter": {
                "xAxis": {
                  "name": "TotalNumEpisodes",
                  "index": 0.0,
                  "aggr": "sum"
                }
              }
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "sql"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821084_-1770880154",
      "id": "20161017-235756_1441150850",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:22:46 AM",
      "dateFinished": "Feb 18, 2017 10:22:46 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Number of Episodes per Season",
      "text": "%spark2.sql \n\nSELECT season, count(number) as episodes FROM svepisodes GROUP BY season",
      "user": "admin",
      "dateUpdated": "Feb 18, 2017 10:22:50 AM",
      "config": {
        "colWidth": 8.0,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "keys": [
                {
                  "name": "season",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "episodes",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "scatter": {
                "xAxis": {
                  "name": "season",
                  "index": 0.0,
                  "aggr": "sum"
                }
              }
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "sql"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821085_-1771264903",
      "id": "20161012-202204_1707933023",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:22:50 AM",
      "dateFinished": "Feb 18, 2017 10:22:54 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Word Count on Episode Summaries",
      "text": "%md\n\nNow let\u0027s perform a basic word-count on the summary column and find out which words occur most frequently. This should give us some indication on the popularity of certain characters and other relevant keywords in the context of the Sillicon Valley show.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNow let\u0026rsquo;s perform a basic word-count on the summary column and find out which words occur most frequently. This should give us some indication on the popularity of certain characters and other relevant keywords in the context of the Sillicon Valley show.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821085_-1771264903",
      "id": "20161013-010351_1570854534",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:19 PM",
      "dateFinished": "Feb 22, 2017 3:27:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Raw Word Count",
      "text": "%spark2.spark\n\nimport org.apache.spark.sql.functions._                        // Import additional helper functions\n\nval svSummaries \u003d svEpisodes.select(\"summary\").as[String]      // Convert to String type (becomes a Dataset)\n\n// Extract individual words\nval words \u003d svSummaries\n  .flatMap(_.split(\"\\\\s+\"))                             // Split on whitespace\n  .filter(_ !\u003d \"\")                                      // Remove empty words\n  .map(_.toLowerCase())                                 // Lowercase\n\n// Word count\nwords.groupByKey(value \u003d\u003e value)                        // Group by word\n     .count()                                           // Count\n     .orderBy($\"count(1)\" desc)                         // Order by most frequent\n     .show()                                            // Display results",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:34:16 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821085_-1771264903",
      "id": "20161013-000142_472015281",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:10:44 AM",
      "dateFinished": "Feb 18, 2017 10:10:50 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Can we improve this?",
      "text": "%md\n\nAs you can see there are plenty of stop words and punctuation marks that surface to the top. Let\u0027s clean this up a bit by creating a basic stop word list and a punctuation mark list that we\u0027ll use as basic filters before we aggregate and order the words again.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:23 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs you can see there are plenty of stop words and punctuation marks that surface to the top. Let\u0026rsquo;s clean this up a bit by creating a basic stop word list and a punctuation mark list that we\u0026rsquo;ll use as basic filters before we aggregate and order the words again.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821086_-1770110656",
      "id": "20161013-010505_1972414834",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:23 PM",
      "dateFinished": "Feb 22, 2017 3:27:23 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "More Sophisticated Filtering",
      "text": "%spark2.spark\n\nval stopWords \u003d List(\"a\", \"an\", \"to\", \"and\", \"the\", \"of\", \"in\", \"for\", \"by\", \"at\")      // Basic set of stop words\nval punctuationMarks \u003d List(\"-\", \",\", \";\", \":\", \".\", \"?\", \"!\")                          // Basic set of punctuation marks\n\n// Filter out stop words and punctuation marks\nval wordsFiltered \u003d words                                                               // Create a new Dataset\n    .filter(!stopWords.contains(_))                                                     // Remove stop words\n    .filter(!punctuationMarks.contains(_))                                              // Remove punctuation marks",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:34:16 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821086_-1770110656",
      "id": "20161013-003539_1918843179",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:11:16 AM",
      "dateFinished": "Feb 18, 2017 10:11:17 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Improved Word Count",
      "text": "%spark2.spark\n\n// Word count\nwordsFiltered\n  .groupBy($\"value\" as \"word\")                          // Group on values (default) column name\n  .agg(count(\"*\") as \"occurences\")                      // Aggregate\n  .orderBy($\"occurences\" desc)                          // Display most common words first\n  .show()                                               // Display results",
      "user": "admin",
      "dateUpdated": "Mar 9, 2017 12:34:17 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821086_-1770110656",
      "id": "20161013-004841_1248757887",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 18, 2017 10:12:16 AM",
      "dateFinished": "Feb 18, 2017 10:12:18 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Note on the Results",
      "text": "%md\n\nLooks like Richard, Pied Piper, Dinesh, Erlich, Gavin and Jared are the key words in the Sillicon Valley show. Looks like a lot revolves around Richard!",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:31 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eLooks like Richard, Pied Piper, Dinesh, Erlich, Gavin and Jared are the key words in the Sillicon Valley show. Looks like a lot revolves around Richard!\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821087_-1770495405",
      "id": "20161014-142139_512800114",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:31 PM",
      "dateFinished": "Feb 22, 2017 3:27:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Final Comments on Word Count",
      "text": "%md\n\nAs you can see, there\u0027s more to do with our word list, e.g. Piper and Piper\u0027s should be counted as the same word. There\u0027s more, of course, however this is beyond the scope of this quick intro to Apache Spark.",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:34 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs you can see, there\u0026rsquo;s more to do with our word list, e.g. Piper and Piper\u0026rsquo;s should be counted as the same word. There\u0026rsquo;s more, of course, however this is beyond the scope of this quick intro to Apache Spark.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821087_-1770495405",
      "id": "20161013-010754_1315051750",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:34 PM",
      "dateFinished": "Feb 22, 2017 3:27:34 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Additional Resources",
      "text": "%md\n\nWe hope you\u0027ve enjoyed this brief intro to Apache Spark. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](http://hortonworks.com/tutorials/#tuts-developers) are your natural next step where you can explore Spark in more depth.\n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html) - official Spark documentation.\n4. [Hortonworks Apache Zeppelin Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_zeppelin-component-guide/content/ch_using_zeppelin.html) - official Zeppelin documentation.\n",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:37 PM",
      "config": {
        "colWidth": 10.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe hope you\u0026rsquo;ve enjoyed this brief intro to Apache Spark. Below are additional resources that you should find useful:\u003c/p\u003e\n\u003col\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://hortonworks.com/tutorials/#tuts-developers\"\u003eHortonworks Apache Spark Tutorials\u003c/a\u003e are your natural next step where you can explore Spark in more depth.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\"\u003eHortonworks Community Connection (HCC)\u003c/a\u003e is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html\"\u003eHortonworks Apache Spark Docs\u003c/a\u003e - official Spark documentation.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_zeppelin-component-guide/content/ch_using_zeppelin.html\"\u003eHortonworks Apache Zeppelin Docs\u003c/a\u003e - official Zeppelin documentation.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821087_-1770495405",
      "id": "20160226-200649_425588199",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:37 PM",
      "dateFinished": "Feb 22, 2017 3:27:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n\u003c/br\u003e\n\u003ccenter\u003e\n\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\" target\u003d\u0027_blank\u0027\u003e\n  \u003cimg src\u003d\"http://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt\u003d\"HCC\" style\u003d\"width:125px;height:125px;border:0;\" align\u003d\"middle\"\u003e\n\u003c/a\u003e\n\u003c/center\u003e",
      "user": "admin",
      "dateUpdated": "Feb 22, 2017 3:27:39 PM",
      "config": {
        "colWidth": 2.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "editorSetting": {},
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003c/br\u003e\n\u003ccenter\u003e\n\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\" target\u003d\u0027_blank\u0027\u003e\n  \u003cimg src\u003d\"http://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt\u003d\"HCC\" style\u003d\"width:125px;height:125px;border:0;\" align\u003d\"middle\"\u003e\n\u003c/a\u003e\n\u003c/center\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487287821088_-1784731114",
      "id": "20161013-185141_1487979052",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "dateStarted": "Feb 22, 2017 3:27:39 PM",
      "dateFinished": "Feb 22, 2017 3:27:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Feb 17, 2017 5:00:21 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487287821088_-1784731114",
      "id": "20161018-143930_1545375880",
      "dateCreated": "Feb 17, 2017 5:00:21 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Getting Started / Apache Spark in 5 Minutes",
  "id": "2CBTZPY14",
  "angularObjects": {
    "2C9J4X9BB:shared_process": [],
    "2C97XTJFE:shared_process": [],
    "2C9BD8WCX:shared_process": [],
    "2CBT85YD7:shared_process": [],
    "2C8RGTKC3:shared_process": [],
    "2CBQNWPMD:shared_process": [],
    "2C8JDGPHH:shared_process": [],
    "2C9CSKWHY:shared_process": [],
    "2CBN9WPNN:shared_process": [],
    "2CB11VTD7:shared_process": [],
    "2C9Z4TVBW:shared_process": [],
    "2CB3RUCX8:shared_process": [],
    "2C9PSG7XP:shared_process": [],
    "2C8PPBWFC:shared_process": [],
    "2C95B7UJY:shared_process": [],
    "2CB91QEZG:shared_process": [],
    "2CAPDMDA1:shared_process": [],
    "2CACTG458:shared_process": [],
    "2CAD4U2BW:shared_process": [],
    "2CBTJTHZE:shared_process": [],
    "2C9VPGHR9:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}