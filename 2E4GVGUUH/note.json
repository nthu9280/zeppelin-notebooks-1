{
  "paragraphs": [
    {
      "title": "Some helper functions",
      "text": "%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html):\n    print(\"%angular\")\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\nversionCheck()\n",
      "user": "anonymous",
      "dateUpdated": "Feb 26, 2019 3:24:35 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Python: 2.7.15 |Anaconda, Inc.| (default, Dec 14 2018, 19:04:19)  - [GCC 7.3.0]\nSpark:  2.3.0.2.6.5.0-292\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424565_-802727094",
      "id": "20170304-121836_865067366",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "dateStarted": "Feb 26, 2019 3:24:35 AM",
      "dateFinished": "Feb 26, 2019 3:24:35 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Simple Angular variable binding",
      "text": "%pyspark\n\ndisplay(\"\"\"\n\n\u003cb\u003eHello {{name}} !\u003c/b\u003e\n\u003cdiv\u003eNote Id:      \u003ci\u003e\"%s\"\u003c/i\u003e (see browser address line)\u003c/div\u003e\n\u003cdiv\u003eParagraph Id: \u003ci\u003e\"%s\"\u003c/i\u003e (see paragraph menu)\u003c/div\u003e\n\n\"\"\" % (getNoteId(), getParagraphId()))\n\nz.z.angularBind(\"name\", \"Zeppelin\")\n",
      "user": "anonymous",
      "dateUpdated": "Feb 26, 2019 3:24:41 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\n\u003cb\u003eHello {{name}} !\u003c/b\u003e\n\u003cdiv\u003eNote Id:      \u003ci\u003e\"2E4GVGUUH\"\u003c/i\u003e (see browser address line)\u003c/div\u003e\n\u003cdiv\u003eParagraph Id: \u003ci\u003e\"20170304-210239_1540885795\"\u003c/i\u003e (see paragraph menu)\u003c/div\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424565_-802727094",
      "id": "20170304-210239_1540885795",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "dateStarted": "Feb 26, 2019 3:24:41 AM",
      "dateFinished": "Feb 26, 2019 3:24:41 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nz.z.angularBind(\"name\", \"Apache Zeppelin\")\n",
      "user": "anonymous",
      "dateUpdated": "Feb 26, 2019 3:24:48 AM",
      "config": {
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1551151424565_-802727094",
      "id": "20170310-155555_57806824",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "dateStarted": "Feb 26, 2019 3:24:48 AM",
      "dateFinished": "Feb 26, 2019 3:24:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Trigger simple Javascript functions via DOM buttons",
      "text": "%pyspark\n\ndisplay(\"\"\"\u003cbutton id\u003d\"abcde\" ng-click\u003d\"run \u003d run + 1\"\u003e{{name}} Click {{run}}\u003c/button\u003e\"\"\")\n\nz.z.angularBind(\"run\", 0)",
      "user": "anonymous",
      "dateUpdated": "Feb 26, 2019 3:31:07 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003cbutton id\u003d\"abcde\" ng-click\u003d\"run \u003d run + 1\"\u003e{{name}} Click {{run}}\u003c/button\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424565_-802727094",
      "id": "20170304-122140_404002024",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "dateStarted": "Feb 26, 2019 3:27:15 AM",
      "dateFinished": "Feb 26, 2019 3:27:15 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## How to trigger Javascript functions: ZeppelinSession, a custom Angular watcher\n\nClicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.\n\nSo let\u0027s use the capabilities of `z.z.angularBind`, `z.z.angularUnbind` and `z.z.angular` together with `$scope.$watch` (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.\n\nPreparation step on the machine running Zeppelin Server:\n\n```\ngit clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n```",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eHow to trigger Javascript functions: ZeppelinSession, a custom Angular watcher\u003c/h2\u003e\n\u003cp\u003eClicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.\u003c/p\u003e\n\u003cp\u003eSo let\u0026rsquo;s use the capabilities of \u003ccode\u003ez.z.angularBind\u003c/code\u003e, \u003ccode\u003ez.z.angularUnbind\u003c/code\u003e and \u003ccode\u003ez.z.angular\u003c/code\u003e together with \u003ccode\u003e$scope.$watch\u003c/code\u003e (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.\u003c/p\u003e\n\u003cp\u003ePreparation step on the machine running Zeppelin Server:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egit clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424566_-801572847",
      "id": "20170304-134854_1991643647",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a new session",
      "text": "%pyspark\n\nfrom zeppelin_session import ZeppelinSession, resetZeppelinSession\n\nresetZeppelinSession(z.z)\nsession \u003d ZeppelinSession(z.z)\n\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424566_-801572847",
      "id": "20170304-135033_419842332",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Start the session (means start Angular watching)",
      "text": "%pyspark\nsession.start()\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424566_-801572847",
      "id": "20170304-162707_558911560",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Set and get Javascript variables from python",
      "text": "%pyspark\nsession.setVar(\"myvar\", 10)\nsession.getVar(\"myvar\")",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424567_-801957596",
      "id": "20170304-170415_475929524",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n**Note:**\nAngular calls are async. This can\u0027t be controlled from Python, so `session.getVar` my be called \"too early\", i.e. before Angular has finished its `$apply()` call.\n\nThat\u0027s why `session.getVar` has an additional parameter `delay` (default 200ms) to give Angular a chance to finish. \n\nExample: `session.getVar(\"myvar\", 500)` for 500ms\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e\u003cbr/\u003eAngular calls are async. This can\u0026rsquo;t be controlled from Python, so \u003ccode\u003esession.getVar\u003c/code\u003e my be called \u0026ldquo;too early\u0026rdquo;, i.e. before Angular has finished its \u003ccode\u003e$apply()\u003c/code\u003e call.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s why \u003ccode\u003esession.getVar\u003c/code\u003e has an additional parameter \u003ccode\u003edelay\u003c/code\u003e (default 200ms) to give Angular a chance to finish. \u003c/p\u003e\n\u003cp\u003eExample: \u003ccode\u003esession.getVar(\u0026quot;myvar\u0026quot;, 500)\u003c/code\u003e for 500ms\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424567_-801957596",
      "id": "20170304-220418_1112986702",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Registering a javascript function",
      "text": "%pyspark\n\njsFunc \u003d \"\"\"\nincrement \u003d function(session, object) {\n    session.myvar +\u003d  object.inc\n}\n\"\"\"\nsession.registerFunction(\"increment\", jsFunc)\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424567_-801957596",
      "id": "20170304-171415_409342668",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n**Note:**\nThe first parameter, `session`, is actually the Angular scope. So every variable `xyz` bound via `z.z.angularBind` can be accessed and changed in the function vie `session.xyz`",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e\u003cbr/\u003eThe first parameter, \u003ccode\u003esession\u003c/code\u003e, is actually the Angular scope. So every variable \u003ccode\u003exyz\u003c/code\u003e bound via \u003ccode\u003ez.z.angularBind\u003c/code\u003e can be accessed and changed in the function vie \u003ccode\u003esession.xyz\u003c/code\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1551151424567_-801957596",
      "id": "20170310-155006_57391036",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Calling the registered function",
      "text": "%pyspark\nsession.call(\"increment\", object\u003d{\"inc\":32})\n\nsession.getVar(\"myvar\", delay\u003d1000) # Remember: async call above, so result might be outdated!\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424568_-803881341",
      "id": "20170304-174205_174725544",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Finally unregister the function again",
      "text": "%pyspark\n\nsession.unregisterFunction(\"increment\")\n\nsession.call(\"increment\", object\u003d{\"inc\":32}) # will now show \"Unknown function: increment()\" in the Browser Javascript Console\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424568_-803881341",
      "id": "20170304-203250_354437753",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Log $scope to Browsers Web Console for inspection",
      "text": "%pyspark\nsession._dumpScope()\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424568_-803881341",
      "id": "20170304-191304_776853471",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "dateUpdated": "Feb 26, 2019 3:23:44 AM",
      "config": {
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1551151424568_-803881341",
      "id": "20170304-220237_374359407",
      "dateCreated": "Feb 26, 2019 3:23:44 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Other/Angular",
  "id": "2E4GVGUUH",
  "angularObjects": {
    "2CHS8UYQQ:shared_process": [],
    "2C8A4SZ9T_livy2:shared_process": [],
    "2E4K1WW2S:shared_process": [],
    "2CK8A9MEG:shared_process": [],
    "2C4U48MY3_spark2:shared_process": [
      {
        "name": "name",
        "object": "Apache Zeppelin",
        "noteId": "2E4GVGUUH"
      },
      {
        "name": "run",
        "object": 5.0,
        "noteId": "2E4GVGUUH"
      }
    ],
    "2CKAY1A8Y:shared_process": [],
    "2CKEKWY8Z:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}